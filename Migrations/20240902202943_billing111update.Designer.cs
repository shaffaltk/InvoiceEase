// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BillingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240902202943_billing111update")]
    partial class billing111update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Billing", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("BilledDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LicenseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MonthYear")
                        .HasColumnType("longtext");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ScreenLicenseId")
                        .HasColumnType("int");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("LicenseType", b =>
                {
                    b.Property<int>("LicenseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MonthlyCost")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("LicenseTypeId");

                    b.ToTable("LicenseTypes");

                    b.HasData(
                        new
                        {
                            LicenseTypeId = 1,
                            MonthlyCost = 50,
                            Type = "Standard"
                        },
                        new
                        {
                            LicenseTypeId = 2,
                            MonthlyCost = 100,
                            Type = "Premium"
                        },
                        new
                        {
                            LicenseTypeId = 3,
                            MonthlyCost = 200,
                            Type = "Enterprise"
                        });
                });

            modelBuilder.Entity("ScreenLicense", b =>
                {
                    b.Property<int>("ScreenLicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LicenseTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ScreenLicenseId");

                    b.HasIndex("LicenseKey")
                        .IsUnique();

                    b.HasIndex("LicenseTypeId");

                    b.ToTable("ScreenLicenses");
                });

            modelBuilder.Entity("ScreenLicense", b =>
                {
                    b.HasOne("LicenseType", "LicenseType")
                        .WithMany()
                        .HasForeignKey("LicenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LicenseType");
                });
#pragma warning restore 612, 618
        }
    }
}
